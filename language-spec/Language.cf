comment "//" ;
comment "/*" "*/" ;

Spec.         Specification ::= Name Version [EnumType] [StructType] [Resource]; 

Nm.           Name          ::= "service_name" ":" Ident;
Ver.          Version       ::= "service_version" ":" VerIdent;
DefEnum.      EnumType      ::= "enum" Ident "{" [EnumVal] "}";
DefStr.       StructType    ::= "struct" Ident "{" [Field] "}";
Res.          Resource      ::= "resource" Ident "(" "\"" RouteIdent "\"" ")" Mode; 
ReadOnly.     Mode          ::= "read_only";
Write.        Mode          ::= ; 

FDef.         Field         ::= [Annotation] Ident ":" FType;
FString.      FType         ::= "String";
FInt.         FType         ::= "Int";
FLong.        FType         ::= "Long";
FDouble.      FType         ::= "Double";
FDefined.     FType         ::= Ident;
FList.        FType         ::= "[" FType "]";
Ann.          Annotation    ::= "@" Ident;
EnVal.        EnumVal       ::= Ident;


separator EnumType "";
separator nonempty Field ",";
separator nonempty StructType "";
separator nonempty Resource "";
separator nonempty EnumVal ",";
separator Annotation "";

token VerIdent digit+ ('.' digit+)* ;
token RouteIdent '/' letter+ ;
